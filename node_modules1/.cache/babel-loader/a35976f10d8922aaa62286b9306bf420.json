{"remainingRequest":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\thread-loader\\dist\\cjs.js!C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\babel-loader\\lib\\index.js!C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\src\\views\\VueSupport.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\src\\views\\VueSupport.vue","mtime":1555930540116},{"path":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555939801121},{"path":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1555939801471},{"path":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\babel-loader\\lib\\index.js","mtime":1555939794798},{"path":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555939801121},{"path":"C:\\inetpub\\wwwroot\\Shipregs2_tst3_k\\js\\vue-cryptoPro-pdf-sign\\node_modules\\vue-loader\\lib\\index.js","mtime":1555939801493}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _myButton = _interopRequireDefault(require(\"../components/my-button.vue\"));\n\nvar _FeedBack = _interopRequireDefault(require(\"./FeedBack.vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar modal = {\n  template: \"  <transition name=\\\"modal\\\">\\n    <div class=\\\"my-modal-mask\\\">\\n      <div class=\\\"my-modal-wrapper\\\">\\n        <div class=\\\"my-modal-container\\\">\\n\\n          <div class=\\\"my-modal-header\\\">\\n            <slot name=\\\"header\\\"> default header </slot>\\n          </div>\\n\\n          <div class=\\\"my-modal-body\\\">\\n            <slot name=\\\"body\\\"> default body </slot>\\n            \\n          </div>\\n\\n          <div class=\\\"modal-footer\\\">\\n            <slot name=\\\"footer\\\"> \\n             \\u0418\\u0426\\u0413\\u041F\\u041A \\xA9 {{new Date().getFullYear()}}\\n             <!-- <button class=\\\"modal-default-button\\\" @click=\\\"$emit('close')\\\"> OK </button>-->\\n            </slot>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </transition>\"\n};\nvar _default = {\n  name: 'vue-support',\n  components: {\n    modal: modal,\n    FeedBack: _FeedBack.default,\n    myButton: _myButton.default\n  },\n  props: ['img_url'],\n  data: function data() {\n    return {\n      rating: null,\n      showModal: false,\n      feedback_text: null\n    };\n  },\n  watch: {},\n  mounted: function mounted() {\n    // подписываемся на событие keydown\n    if (typeof document !== 'undefined') {\n      document.body.addEventListener('keydown', this.handleTabKey);\n    }\n\n    if (this.$el.focus) {\n      this.$el.focus(); // фокус переводим на окно, при монтировании\n    }\n  },\n  destroyed: function destroyed() {\n    // отписываемся\n    if (typeof document !== 'undefined') {\n      document.body.removeEventListener('keydown', this.handleTabKey);\n    }\n  },\n  methods: {\n    saveStateChange: function saveStateChange(val) {\n      if (!val || val == 'false') {\n        localStorage.clear();\n      } //в момент убирания птички - удаляются все записи из локалСторага;\n\n\n      this.saveToStoreAndLocalStorage('saveState', val); //пишем в локалстораг и в стор VUEx\n    },\n    goTour: function goTour() {\n      this.$store.commit('changeData', {\n        prop: 'tour',\n        state: true\n      });\n      introJs.start(); //\n      //this.$intro().start();\n\n      /*\r\n        document.querySelector('.introjs-skipbutton').innerText = 'Пропустить';\r\n        document.querySelector('.introjs-prevbutton').innerText = '← Назад';\r\n        document.querySelector('.introjs-nextbutton').innerText = 'Далее →';\r\n        document.querySelector('.introjs-donebutton').innerText = 'Закрыть';\r\n      */\n\n      this.showModal = false;\n    },\n    closeModal: function closeModal() {\n      this.showModal = false;\n      this.changeState('main');\n    },\n    changeState: function changeState(state) {\n      this.$store.commit('changeData', {\n        prop: 'helpStatus',\n        state: state\n      });\n    },\n    handleTabKey: function handleTabKey(e) {\n      console.log('handleTabKey(e)=>>>', e);\n\n      if (e.keyCode === 9 && this.modals.length) {\n        e.preventDefault(); // если есть окна, глушим Tab/Shift-Tab\n      } // пока полностью отключаю Tab. Надо подумать, как лучше его глушить только вне активного окна. \n\n    },\n    click_handler: function click_handler(e) {\n      if (e.path[0].classList.value == 'my-modal-wrapper') {\n        console.log('клик во враппер модального!');\n        this.closeModal();\n      }\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["VueSupport.vue"],"names":[],"mappings":";;;;;;;AAiFA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7BA,IAAA,KAAA,GAAA;AACA,EAAA,QAAA;AADA,CAAA;eA8BA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA,iBAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA,CAAA,SAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,aAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,KAAA,EAAA,EAXA;AAcA,EAAA,OAdA,qBAcA;AACA;AACA,QAAA,OAAA,QAAA,KAAA,WAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,KAAA,YAAA;AACA;;AACA,QAAA,KAAA,GAAA,CAAA,KAAA,EAAA;AACA,WAAA,GAAA,CAAA,KAAA,GADA,CACA;AACA;AACA,GAtBA;AAuBA,EAAA,SAvBA,uBAuBA;AACA;AACA,QAAA,OAAA,QAAA,KAAA,WAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,KAAA,YAAA;AACA;AACA,GA5BA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,GADA,EACA;AACA,UAAA,CAAA,GAAA,IAAA,GAAA,IAAA,OAAA,EAAA;AAAA,QAAA,YAAA,CAAA,KAAA;AAAA,OADA,CACA;;;AACA,WAAA,0BAAA,CAAA,WAAA,EAAA,GAAA,EAFA,CAEA;AACA,KAJA;AAKA,IAAA,MALA,oBAKA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,MAAA,OAAA,CAAA,KAAA,GAFA,CAGA;AACA;;AACA;;;;;;;AAOA,WAAA,SAAA,GAAA,KAAA;AACA,KAlBA;AAmBA,IAAA,UAnBA,wBAmBA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,WAAA,CAAA,MAAA;AACA,KAtBA;AAuBA,IAAA,WAvBA,uBAuBA,KAvBA,EAuBA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA;AAAA,QAAA,IAAA,EAAA,YAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,KAzBA;AA0BA,IAAA,YA1BA,wBA0BA,CA1BA,EA0BA;AAAA,MAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,CAAA;;AACA,UAAA,CAAA,CAAA,OAAA,KAAA,CAAA,IAAA,KAAA,MAAA,CAAA,MAAA,EAAA;AACA,QAAA,CAAA,CAAA,cAAA,GADA,CACA;AACA,OAHA,CAGA;;AACA,KA9BA;AA+BA,IAAA,aA/BA,yBA+BA,CA/BA,EA+BA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,SAAA,CAAA,KAAA,IAAA,kBAAA,EAAA;AAAA,QAAA,OAAA,CAAA,GAAA,CAAA,6BAAA;AACA,aAAA,UAAA;AACA;AACA;AAnCA;AA7BA,C","sourcesContent":["<template>\r\n  <div @click=\"click_handler\" @keydown.esc=\"closeModal\" class=\"vueSupport\">\r\n    <div class=\"get-help-row\" @click=\"showModal = true\"> \r\n      <img :src=\"img_url+'help-icon.png'\" alt=\"help-icon\"> \r\n      <span>Помощь</span>\r\n    </div>\r\n\r\n    \r\n    <!-- используй компонент modal, чтобы спустить туда пропсы --> \r\n    <modal v-show=\"showModal\" @close=\"closeModal\">    \r\n      \r\n      <div slot=\"header\"> \r\n        <div v-if=\"helpStatus == 'main'\"></div>\r\n        <my-button :img_url=\"img_url\" v-if=\"helpStatus == 'feedback'\" class=\"back\" @click=\"changeState('main')\" text=\"<\" />\r\n        <div><strong>Помощь</strong></div>\r\n        <my-button :img_url=\"img_url\" class=\"close\" @click=\"closeModal\" text=\"x\"/>\r\n      </div>\r\n \r\n\r\n\r\n      <div slot=\"body\">\r\n \r\n        <div v-if=\"helpStatus == 'main'\"> \r\n\r\n\r\n\r\n            <div class=\"get-help-row\" @click=\"goTour\"> \r\n              <img :src=\"img_url+'help-icon.png'\" alt=\"help-icon\"> \r\n              <span class=\"link\">Помощь с интерфейсом</span>\r\n            </div>            \r\n            \r\n            <div class=\"get-help-row\" @click=\"changeState('feedback')\"> \r\n              <img :src=\"img_url+'feedback.png'\" alt=\"help-icon\"> \r\n              <span class=\"link\"  v-b-tooltip title=\"Отправить отчет об ошибке\">Обратная связь</span>\r\n            </div>\r\n            <div class=\"check\"> \r\n              <my-checkbox :checked=\"saveState\" @click=\"saveStateChange\" text=\"Запоминать состояние\"/> \r\n            </div>\r\n\r\n\r\n        </div> \r\n        <FeedBack :img_url=\"img_url\" :helpStatus=\"helpStatus\" v-if=\"helpStatus == 'feedback'\"/>\r\n\r\n\r\n      </div> \r\n      \r\n     <!--<template slot=\"footer\"> <!--<button class=\"btn-3d-1\" @click=\"showModal = false\">Закрыть</button>-- >  </template>-->\r\n    </modal>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nlet modal = {\r\n  template: `  <transition name=\"modal\">\r\n    <div class=\"my-modal-mask\">\r\n      <div class=\"my-modal-wrapper\">\r\n        <div class=\"my-modal-container\">\r\n\r\n          <div class=\"my-modal-header\">\r\n            <slot name=\"header\"> default header </slot>\r\n          </div>\r\n\r\n          <div class=\"my-modal-body\">\r\n            <slot name=\"body\"> default body </slot>\r\n            \r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <slot name=\"footer\"> \r\n             ИЦГПК © {{new Date().getFullYear()}}\r\n             <!-- <button class=\"modal-default-button\" @click=\"$emit('close')\"> OK </button>-->\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>`\r\n};\r\n\r\nimport myButton from '../components/my-button.vue';\r\n\r\nimport FeedBack from \"./FeedBack.vue\";\r\nexport default {\r\n  name: 'vue-support',\r\n  components: { modal, FeedBack, myButton },\r\n  props: ['img_url'],\r\n  data() {\r\n    return {\r\n      rating: null,\r\n      showModal: false,\r\n      feedback_text:null\r\n    };\r\n  },\r\n  watch:{\r\n    \r\n  },\r\n  mounted() {\r\n// подписываемся на событие keydown\r\n    if (typeof document !== 'undefined') {\r\n      document.body.addEventListener('keydown', this.handleTabKey)\r\n    }\r\n    if(this.$el.focus) {\r\n      this.$el.focus() // фокус переводим на окно, при монтировании\r\n    }\r\n},\r\n destroyed () {\r\n// отписываемся\r\n    if (typeof document !== 'undefined') {\r\n      document.body.removeEventListener('keydown', this.handleTabKey)\r\n    }\r\n}, \r\n  methods: {\r\n    saveStateChange(val){ \r\n      if(!val || val == 'false'){ localStorage.clear(); }   //в момент убирания птички - удаляются все записи из локалСторага;\r\n      this.saveToStoreAndLocalStorage('saveState', val);//пишем в локалстораг и в стор VUEx\r\n    },\r\n    goTour() {\r\n      this.$store.commit('changeData', { prop: 'tour', state: true } );\r\n      introJs.start();\r\n      //\r\n      //this.$intro().start();\r\n      /*\r\n        document.querySelector('.introjs-skipbutton').innerText = 'Пропустить';\r\n        document.querySelector('.introjs-prevbutton').innerText = '← Назад';\r\n        document.querySelector('.introjs-nextbutton').innerText = 'Далее →';\r\n        document.querySelector('.introjs-donebutton').innerText = 'Закрыть';\r\n      */\r\n\r\n      this.showModal = false;\r\n    },\r\n    closeModal(){\r\n      this.showModal = false;\r\n      this.changeState('main');\r\n    },\r\n    changeState(state){\r\n      this.$store.commit('changeData', { prop: 'helpStatus', state: state } );\r\n    }, \r\n    handleTabKey(e) { console.log('handleTabKey(e)=>>>',e);\r\n       if (e.keyCode === 9 && this.modals.length) {\r\n         e.preventDefault() // если есть окна, глушим Tab/Shift-Tab\r\n       } // пока полностью отключаю Tab. Надо подумать, как лучше его глушить только вне активного окна. \r\n    },\r\n      click_handler(e){ \r\n          if(e.path[0].classList.value == 'my-modal-wrapper') { console.log('клик во враппер модального!');\r\n              this.closeModal();\r\n          }\r\n      }\r\n  }\r\n};\r\n</script> \r\n\r\n<style scoped lang=\"scss\">\r\n.check { padding-top:10px; }\r\n.header {\r\n  font-weight: 888;\r\n  font-size:15px;\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\"> \r\n\r\n.back {\r\n  font-size:30px;\r\n}\r\n \r\n\r\n.vueSupport{ display: flex; }\r\n\r\n.get-help-row {\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: .4s; \r\n  align-items: center;\r\n  cursor: pointer; \r\n  padding: 7px 19px;\r\n  /*border-radius: 2px;*/\r\n  text-shadow: 0px -1px 0px rgba(0, 0, 0, 0.3);\r\n  color: white;\r\n  &:hover {\r\n    background-color: #264b6c30;\r\n    transform: scale(1.1);\r\n  } \r\n  img {\r\n    width: 21px;\r\n  }\r\n}\r\n\r\n.my-modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.my-modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.my-modal-container {  \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  \r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 20px 0px 20px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.my-modal-header {\r\n        border-bottom: 1px solid #2f9d6b;\r\n        width: 100%;\r\n        text-align: center;\r\n        padding-bottom:10px;\r\n        margin-bottom:10px;\r\n    &>div {\r\n      margin: 0;\r\n      color: #42b983;\r\n      display: flex; \r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n}\r\n\r\n.my-modal-body {\r\n  margin: 10px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"modal\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the modal transition by editing\r\n * these styles.\r\n */\r\n\r\n.modal-enter {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-active {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter .my-modal-container,\r\n.modal-leave-active .my-modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}